#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+BEGIN_COMMENT
#+STYLE: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+STYLE: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+END_COMMENT
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE:Breadboarding
#+AUTHOR: Paul Dougall

#+BEGIN_HTML
<div class=ribbon>
<a href="https://github.com/stcd11/X-SC-Extension">Fork me on GitHub</a>
</div>
<center>
<imgzz src='' width=33%>
</center>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

e* Introduction
[[file:img/pic.jpg]]
:PROPERTIES:
:HTML_CONTAINER_CLASS: intro
:END:
** What are PIC chips?
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
Peripheral Interface Controllers are small silicon chips which can be programmed to perform useful tasks.
In school, we tend to use Genie branded chips, like the C08 model you will use in this project. Others (e.g. PICAXE) are available.
PIC chips allow you connect different inputs (e.g. switches) and outputs (e.g. LEDs, motors and speakers), and to control them using flowcharts.
Chips such as these can be found everywhere in consumer electronic products, from toasters to cars. 

While they might not look like much, there is more computational power in a single PIC chip used in school than there was in the space shuttle that went to the moon in the 60's!
** When would I use a PIC chip?
Imagine you wanted to make a flashing bike light; using an LED and a switch alone, you'd need to manually push and release the button to get the flashing effect. A PIC chip could be programmed to turn the LED off and on once a second.
In a board game, you might want to have an electronic dice to roll numbers from 1 to 6 for you. 
In a car, a circuit is needed to ensure that the airbags only deploy when there is a sudden change in speed, AND the passenger is wearing their seatbelt, AND the front or rear bumper has been struck. PIC chips can carry out their instructions very quickly, performing around 1000 instructions per second - as such, they can react far more quickly than a person can. 
* Introduction
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
- Follow the instructions to make a working prototype version of the Yr7 LED torch project.
- You will need has 2 LEDs, a breadboard, two 330 ohm resistors and a 6X6 push to make switch.
- You will also need single core wire – black and red, wire cutter and wire strippers.

[[./img/bread1.png]]

- Using the single core wire – black and red – cut and strip your wire to make your power leads. These will eventually connect to the power supply at 3V.

[[./img/bread2.png]]


- Wire them in. Best to give a 90 degree bend at the end. Try to keep them as flat to the board as possible. Black to the negative rail and red to the positive rail.

[[./img/bread3.png]]

[[./img/bread4.png]]

** Let’s get connected
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:
 
- Using the single core red wire make a short connector lead which is going to
- Run from the positive rail into the rest of the board.

[[./img/bread5.png]]

- Note LED shown for scale and I used the wrong colour wire.

[[./img/bread6.png]]

- Insert your connector lead to the board.

- Next add the LED. Remember they are dependent on being fitted with
- The correct polarity so make sure the long leg is the positive.
- Trim down the legs and insert to the board as shown. Flatten side is negative.

[[./img/bread7.png]]
[[./img/bread8.png]]
[[./img/bread9.png]]

** Mind the gap
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:
- Add a push to make switch (P2M). They are not quite square so it will only fit one way round  across the gap. 
- The first hoop needs to be inline with the LED’s negative leg. 

[[./img/bread11.png]]

** Resistance is not futile!
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:
- Why do we need a resistor?
- Grad a load resistor. It needs to be a 330 ohm.
Can you remember the values of the colour bands?

[[./img/bread12.png]]


- Insert the resistor into the board. It needs to connect from the second hoop of the P2M switch to the negative rail.

[[./img/bread13.png]]

** Blast off!
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:
- Before plugging in double check your power supply is set to 3V.
- Follow the path of the electrons and make sure everything links together.
- Electrons will not flow unless they got somewhere to go.

[[./img/bread14.png]]

- When you are sure connect your power leads to the crocodile clips and switch on.

** Challenges
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

- Add a second LED to your prototype circuit so both LEDs switch on and off with the P2M switch.
- Add a second LED to your prototype circuit so that one LED is permanently on and the other switches on and off with the P2M switch.
- Make the Year 7 door buzzer
- Use the 555 resource and build yourself a 555 flashing LED circuit
- Make a download socket and you can start making the Year 8 PIC license and PIC die projects.
- Other ideas... try[[http://www.instructables.com/id/Ten-Breadboard-Projects-For-Beginners/][ here.]]



